The lifecycle of any software is more than just its releases and the set of
tools used to create it.
The architecture of the software, the languages used to write, the deployment
mechanisms, and the developer teams will change over time.
The only constant is change itself.
Traditional methods of software development either fail in modeling this
change, or make it very hard to aggregate all the changes accross all levels
of abstraction in a DRY way.
This talk will present a unified process model/library that naturally spans
from the initial sketch of any software system to the members of all classes.
Additionally, the model can be stored in a version control system in the most
natural way.
